name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "18"
          cache: "npm"
      - name: Install dependencies
        run: npm ci
      - name: Setup Pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next
      - name: Create data directory
        run: mkdir -p public/data
      - name: Fetch latest news for English
        run: |
          GNEWS_API_KEY="${{ secrets.GNEWS_API_KEY || 'fallback-key' }}"
          curl -s "https://gnews.io/api/v4/search?q=india&country=in&max=10&apikey=$GNEWS_API_KEY" > public/data/news-en.json || echo "Failed to fetch English news"
          if [ ! -s public/data/news-en.json ] || [ "$(cat public/data/news-en.json | grep -c 'articles')" -eq 0 ]; then
            echo "English news API call failed or returned invalid data"
          else
            echo "Successfully fetched English news"
          fi
      - name: Fetch latest news for Hindi
        run: |
          GNEWS_API_KEY="${{ secrets.GNEWS_API_KEY || 'fallback-key' }}"
          curl -s "https://gnews.io/api/v4/search?q=भारत&country=in&lang=hi&max=10&apikey=$GNEWS_API_KEY" > public/data/news-hi.json || echo "Failed to fetch Hindi news"
          if [ ! -s public/data/news-hi.json ] || [ "$(cat public/data/news-hi.json | grep -c 'articles')" -eq 0 ]; then
            echo "Hindi news API call failed or returned invalid data"
          else
            echo "Successfully fetched Hindi news"
          fi
      - name: Create fallback news files
        run: |
          # Check if English news file exists and has content
          if [ ! -s public/data/news-en.json ] || [ "$(cat public/data/news-en.json | grep -c 'articles')" -eq 0 ]; then
            echo "Creating fallback English news file"
            cp scripts/mock-news-en.json public/data/news-en.json
          fi
          
          # Check if Hindi news file exists and has content
          if [ ! -s public/data/news-hi.json ] || [ "$(cat public/data/news-hi.json | grep -c 'articles')" -eq 0 ]; then
            echo "Creating fallback Hindi news file"
            cp scripts/mock-news-hi.json public/data/news-hi.json
          fi
      - name: Build with Next.js
        run: NODE_ENV=production STATIC_BUILD=true APP_BASE_PATH="/bharatinfo-sol" npm run build:github
      - name: Debug output directory
        run: find out -type f | sort
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2 
name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
          cache: npm
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Install dependencies
        run: npm ci
      - name: Set build environment
        run: |
          echo "Setting production environment variables"
          echo "NODE_ENV=production" >> $GITHUB_ENV
          echo "STATIC_BUILD=true" >> $GITHUB_ENV
          echo "APP_BASE_PATH=/bharatinfo-sol" >> $GITHUB_ENV
          echo "NEXT_PUBLIC_STATIC_BUILD=true" >> $GITHUB_ENV
      - name: Build
        run: npm run build:github
        env:
          NODE_ENV: production
          STATIC_BUILD: true
          APP_BASE_PATH: /bharatinfo-sol
          NEXT_PUBLIC_STATIC_BUILD: true
      - name: Fix image paths
        run: node scripts/fix-image-paths.js
      - name: Debug build output
        run: |
          echo "Listing build output files..."
          ls -la out/
          echo "Checking for HTML files..."
          find out -name "*.html" | head -5
          echo "Checking for index.html content..."
          grep -n "fetch" out/index.html || echo "No direct fetch references found in index.html"
      - name: Manual copy of public assets
        run: |
          echo "Manually copying public directory to out directory..."
          cp -r public/* out/
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 